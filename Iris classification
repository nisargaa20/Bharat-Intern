"import numpy as np\n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
    "import seaborn as sns\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
@@ -395,13 +397,15 @@
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 150 entries, 0 to 149\n",
      "Data columns (total 5 columns):\n",
      "SepalLengthCm    150 non-null float64\n",
      "SepalWidthCm     150 non-null float64\n",
      "PetalLengthCm    150 non-null float64\n",
      "PetalWidthCm     150 non-null float64\n",
      "Species          150 non-null object\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   SepalLengthCm  150 non-null    float64\n",
      " 1   SepalWidthCm   150 non-null    float64\n",
      " 2   PetalLengthCm  150 non-null    float64\n",
      " 3   PetalWidthCm   150 non-null    float64\n",
      " 4   Species        150 non-null    object \n",
      "dtypes: float64(4), object(1)\n",
      "memory usage: 5.9+ KB\n"
      "memory usage: 6.0+ KB\n"
     ]
    }
   ],
@@ -412,19 +416,19 @@
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Iris-virginica     50\n",
       "Iris-versicolor    50\n",
       "Iris-virginica     50\n",
       "Iris-setosa        50\n",
       "Name: Species, dtype: int64"
      ]
     },
     "execution_count": 10,
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
@@ -443,7 +447,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
@@ -457,7 +461,7 @@
       "dtype: int64"
      ]
     },
     "execution_count": 14,
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
@@ -483,16 +487,16 @@
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1b888b45908>"
       "<matplotlib.axes._subplots.AxesSubplot at 0x272fb2addd8>"
      ]
     },
     "execution_count": 15,
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
@@ -516,18 +520,18 @@
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "execution_count": 9,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1b8886a0b00>"
       "<matplotlib.axes._subplots.AxesSubplot at 0x272fb351c88>"
      ]
     },
     "execution_count": 16,
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
@@ -550,16 +554,16 @@
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1b88888f940>"
       "<matplotlib.axes._subplots.AxesSubplot at 0x272fb42e588>"
      ]
     },
     "execution_count": 17,
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
@@ -582,16 +586,16 @@
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1b88860b588>"
       "<matplotlib.axes._subplots.AxesSubplot at 0x272fb4a94a8>"
      ]
     },
     "execution_count": 18,
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
@@ -614,7 +618,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
@@ -625,16 +629,16 @@
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1b888fa9ba8>"
       "<matplotlib.legend.Legend at 0x272fb580390>"
      ]
     },
     "execution_count": 21,
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
@@ -662,16 +666,16 @@
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1b888feb7b8>"
       "<matplotlib.legend.Legend at 0x272fb5c4390>"
      ]
     },
     "execution_count": 22,
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
@@ -699,16 +703,16 @@
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1b888dcd320>"
       "<matplotlib.legend.Legend at 0x272fb63c3c8>"
      ]
     },
     "execution_count": 23,
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
@@ -736,16 +740,16 @@
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1b888f32438>"
       "<matplotlib.legend.Legend at 0x272fb6b2668>"
      ]
     },
     "execution_count": 24,
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
@@ -803,7 +807,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
@@ -874,7 +878,7 @@
       "PetalWidthCm        0.817954     -0.356544       0.962757      1.000000"
      ]
     },
     "execution_count": 25,
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
@@ -885,16 +889,16 @@
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1b888cfb780>"
       "<matplotlib.axes._subplots.AxesSubplot at 0x272fb718cf8>"
      ]
     },
     "execution_count": 31,
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
@@ -928,7 +932,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
@@ -938,7 +942,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
@@ -1023,7 +1027,7 @@
       "4            5.0           3.6            1.4           0.2        0"
      ]
     },
     "execution_count": 33,
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
@@ -1042,7 +1046,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
@@ -1056,7 +1060,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
@@ -1067,19 +1071,9 @@
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\sklearn\\linear_model\\logistic.py:433: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
      "  FutureWarning)\n",
      "C:\\ProgramData\\Anaconda3\\lib\\site-packages\\sklearn\\linear_model\\logistic.py:460: FutureWarning: Default multi_class will be changed to 'auto' in 0.22. Specify the multi_class option to silence this warning.\n",
      "  \"this warning.\", FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
@@ -1089,7 +1083,7 @@
       "          tol=0.0001, verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 55,
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
@@ -1101,14 +1095,14 @@
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  100.0\n"
      "Accuracy:  91.11111111111111\n"
     ]
    }
   ],
@@ -1119,7 +1113,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
@@ -1130,7 +1124,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
@@ -1141,7 +1135,7 @@
       "           weights='uniform')"
      ]
     },
     "execution_count": 58,
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
@@ -1152,7 +1146,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
@@ -1170,7 +1164,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
@@ -1181,7 +1175,7 @@
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
@@ -1195,7 +1189,7 @@
       "            splitter='best')"
      ]
     },
     "execution_count": 61,
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
@@ -1206,14 +1200,14 @@
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy:  93.33333333333333\n"
      "Accuracy:  91.11111111111111\n"
     ]
    }
   ],
